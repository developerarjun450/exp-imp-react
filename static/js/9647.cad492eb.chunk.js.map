{"version":3,"file":"static/js/9647.cad492eb.chunk.js","mappings":"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","sources":["../node_modules/@formkit/auto-animate/index.mjs","../node_modules/@formkit/auto-animate/react/index.mjs"],"sourcesContent":["/**\n * A set of all the parents currently being observe. This is the only non weak\n * registry.\n */\nconst parents = new Set();\n/**\n * Element coordinates that is constantly kept up to date.\n */\nconst coords = new WeakMap();\n/**\n * Siblings of elements that have been removed from the dom.\n */\nconst siblings = new WeakMap();\n/**\n * Animations that are currently running.\n */\nconst animations = new WeakMap();\n/**\n * A map of existing intersection observers used to track element movements.\n */\nconst intersections = new WeakMap();\n/**\n * Intervals for automatically checking the position of elements occasionally.\n */\nconst intervals = new WeakMap();\n/**\n * The configuration options for each group of elements.\n */\nconst options = new WeakMap();\n/**\n * Debounce counters by id, used to debounce calls to update positions.\n */\nconst debounces = new WeakMap();\n/**\n * All parents that are currently enabled are tracked here.\n */\nconst enabled = new WeakSet();\n/**\n * The document used to calculate transitions.\n */\nlet root;\n/**\n * The root’s XY scroll positions.\n */\nlet scrollX = 0;\nlet scrollY = 0;\n/**\n * Used to sign an element as the target.\n */\nconst TGT = \"__aa_tgt\";\n/**\n * Used to sign an element as being part of a removal.\n */\nconst DEL = \"__aa_del\";\n/**\n * Used to sign an element as being \"new\". When an element is removed from the\n * dom, but may cycle back in we can sign it with new to ensure the next time\n * it is recognized we consider it new.\n */\nconst NEW = \"__aa_new\";\n/**\n * Callback for handling all mutations.\n * @param mutations - A mutation list\n */\nconst handleMutations = (mutations) => {\n    const elements = getElements(mutations);\n    // If elements is \"false\" that means this mutation that should be ignored.\n    if (elements) {\n        elements.forEach((el) => animate(el));\n    }\n};\n/**\n *\n * @param entries - Elements that have been resized.\n */\nconst handleResizes = (entries) => {\n    entries.forEach((entry) => {\n        if (entry.target === root)\n            updateAllPos();\n        if (coords.has(entry.target))\n            updatePos(entry.target);\n    });\n};\n/**\n * Observe this elements position.\n * @param el - The element to observe the position of.\n */\nfunction observePosition(el) {\n    const oldObserver = intersections.get(el);\n    oldObserver === null || oldObserver === void 0 ? void 0 : oldObserver.disconnect();\n    let rect = coords.get(el);\n    let invocations = 0;\n    const buffer = 5;\n    if (!rect) {\n        rect = getCoords(el);\n        coords.set(el, rect);\n    }\n    const { offsetWidth, offsetHeight } = root;\n    const rootMargins = [\n        rect.top - buffer,\n        offsetWidth - (rect.left + buffer + rect.width),\n        offsetHeight - (rect.top + buffer + rect.height),\n        rect.left - buffer,\n    ];\n    const rootMargin = rootMargins\n        .map((px) => `${-1 * Math.floor(px)}px`)\n        .join(\" \");\n    const observer = new IntersectionObserver(() => {\n        ++invocations > 1 && updatePos(el);\n    }, {\n        root,\n        threshold: 1,\n        rootMargin,\n    });\n    observer.observe(el);\n    intersections.set(el, observer);\n}\n/**\n * Update the exact position of a given element.\n * @param el - An element to update the position of.\n */\nfunction updatePos(el) {\n    clearTimeout(debounces.get(el));\n    const optionsOrPlugin = getOptions(el);\n    const delay = isPlugin(optionsOrPlugin) ? 500 : optionsOrPlugin.duration;\n    debounces.set(el, setTimeout(async () => {\n        const currentAnimation = animations.get(el);\n        try {\n            await (currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.finished);\n            coords.set(el, getCoords(el));\n            observePosition(el);\n        }\n        catch {\n            // ignore errors as the `.finished` promise is rejected when animations were cancelled\n        }\n    }, delay));\n}\n/**\n * Updates all positions that are currently being tracked.\n */\nfunction updateAllPos() {\n    clearTimeout(debounces.get(root));\n    debounces.set(root, setTimeout(() => {\n        parents.forEach((parent) => forEach(parent, (el) => lowPriority(() => updatePos(el))));\n    }, 100));\n}\n/**\n * Its possible for a quick scroll or other fast events to get past the\n * intersection observer, so occasionally we need want \"cold-poll\" for the\n * latests and greatest position. We try to do this in the most non-disruptive\n * fashion possible. First we only do this ever couple seconds, staggard by a\n * random offset.\n * @param el - Element\n */\nfunction poll(el) {\n    setTimeout(() => {\n        intervals.set(el, setInterval(() => lowPriority(updatePos.bind(null, el)), 2000));\n    }, Math.round(2000 * Math.random()));\n}\n/**\n * Perform some operation that is non critical at some point.\n * @param callback\n */\nfunction lowPriority(callback) {\n    if (typeof requestIdleCallback === \"function\") {\n        requestIdleCallback(() => callback());\n    }\n    else {\n        requestAnimationFrame(() => callback());\n    }\n}\n/**\n * The mutation observer responsible for watching each root element.\n */\nlet mutations;\n/**\n * A resize observer, responsible for recalculating elements on resize.\n */\nlet resize;\n/**\n * If this is in a browser, initialize our Web APIs\n */\nif (typeof window !== \"undefined\") {\n    root = document.documentElement;\n    mutations = new MutationObserver(handleMutations);\n    resize = new ResizeObserver(handleResizes);\n    window.addEventListener(\"scroll\", () => {\n        scrollY = window.scrollY;\n        scrollX = window.scrollX;\n    });\n    resize.observe(root);\n}\n/**\n * Retrieves all the elements that may have been affected by the last mutation\n * including ones that have been removed and are no longer in the DOM.\n * @param mutations - A mutation list.\n * @returns\n */\nfunction getElements(mutations) {\n    const observedNodes = mutations.reduce((nodes, mutation) => {\n        return [\n            ...nodes,\n            ...Array.from(mutation.addedNodes),\n            ...Array.from(mutation.removedNodes),\n        ];\n    }, []);\n    // Short circuit if _only_ comment nodes are observed\n    const onlyCommentNodesObserved = observedNodes.every((node) => node.nodeName === \"#comment\");\n    if (onlyCommentNodesObserved)\n        return false;\n    return mutations.reduce((elements, mutation) => {\n        // Short circuit if we find a purposefully deleted node.\n        if (elements === false)\n            return false;\n        if (mutation.target instanceof Element) {\n            target(mutation.target);\n            if (!elements.has(mutation.target)) {\n                elements.add(mutation.target);\n                for (let i = 0; i < mutation.target.children.length; i++) {\n                    const child = mutation.target.children.item(i);\n                    if (!child)\n                        continue;\n                    if (DEL in child) {\n                        return false;\n                    }\n                    target(mutation.target, child);\n                    elements.add(child);\n                }\n            }\n            if (mutation.removedNodes.length) {\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const child = mutation.removedNodes[i];\n                    if (DEL in child) {\n                        return false;\n                    }\n                    if (child instanceof Element) {\n                        elements.add(child);\n                        target(mutation.target, child);\n                        siblings.set(child, [\n                            mutation.previousSibling,\n                            mutation.nextSibling,\n                        ]);\n                    }\n                }\n            }\n        }\n        return elements;\n    }, new Set());\n}\n/**\n * Assign the target to an element.\n * @param el - The root element\n * @param child\n */\nfunction target(el, child) {\n    if (!child && !(TGT in el))\n        Object.defineProperty(el, TGT, { value: el });\n    else if (child && !(TGT in child))\n        Object.defineProperty(child, TGT, { value: el });\n}\n/**\n * Determines what kind of change took place on the given element and then\n * performs the proper animation based on that.\n * @param el - The specific element to animate.\n */\nfunction animate(el) {\n    var _a;\n    const isMounted = el.isConnected;\n    const preExisting = coords.has(el);\n    if (isMounted && siblings.has(el))\n        siblings.delete(el);\n    if (animations.has(el)) {\n        (_a = animations.get(el)) === null || _a === void 0 ? void 0 : _a.cancel();\n    }\n    if (NEW in el) {\n        add(el);\n    }\n    else if (preExisting && isMounted) {\n        remain(el);\n    }\n    else if (preExisting && !isMounted) {\n        remove(el);\n    }\n    else {\n        add(el);\n    }\n}\n/**\n * Removes all non-digits from a string and casts to a number.\n * @param str - A string containing a pixel value.\n * @returns\n */\nfunction raw(str) {\n    return Number(str.replace(/[^0-9.\\-]/g, \"\"));\n}\n/**\n * Get the scroll offset of elements\n * @param el - Element\n * @returns\n */\nfunction getScrollOffset(el) {\n    let p = el.parentElement;\n    while (p) {\n        if (p.scrollLeft || p.scrollTop) {\n            return { x: p.scrollLeft, y: p.scrollTop };\n        }\n        p = p.parentElement;\n    }\n    return { x: 0, y: 0 };\n}\n/**\n * Get the coordinates of elements adjusted for scroll position.\n * @param el - Element\n * @returns\n */\nfunction getCoords(el) {\n    const rect = el.getBoundingClientRect();\n    const { x, y } = getScrollOffset(el);\n    return {\n        top: rect.top + y,\n        left: rect.left + x,\n        width: rect.width,\n        height: rect.height,\n    };\n}\n/**\n * Returns the width/height that the element should be transitioned between.\n * This takes into account box-sizing.\n * @param el - Element being animated\n * @param oldCoords - Old set of Coordinates coordinates\n * @param newCoords - New set of Coordinates coordinates\n * @returns\n */\nfunction getTransitionSizes(el, oldCoords, newCoords) {\n    let widthFrom = oldCoords.width;\n    let heightFrom = oldCoords.height;\n    let widthTo = newCoords.width;\n    let heightTo = newCoords.height;\n    const styles = getComputedStyle(el);\n    const sizing = styles.getPropertyValue(\"box-sizing\");\n    if (sizing === \"content-box\") {\n        const paddingY = raw(styles.paddingTop) +\n            raw(styles.paddingBottom) +\n            raw(styles.borderTopWidth) +\n            raw(styles.borderBottomWidth);\n        const paddingX = raw(styles.paddingLeft) +\n            raw(styles.paddingRight) +\n            raw(styles.borderRightWidth) +\n            raw(styles.borderLeftWidth);\n        widthFrom -= paddingX;\n        widthTo -= paddingX;\n        heightFrom -= paddingY;\n        heightTo -= paddingY;\n    }\n    return [widthFrom, widthTo, heightFrom, heightTo].map(Math.round);\n}\n/**\n * Retrieves animation options for the current element.\n * @param el - Element to retrieve options for.\n * @returns\n */\nfunction getOptions(el) {\n    return TGT in el && options.has(el[TGT])\n        ? options.get(el[TGT])\n        : { duration: 250, easing: \"ease-in-out\" };\n}\n/**\n * Returns the target of a given animation (generally the parent).\n * @param el - An element to check for a target\n * @returns\n */\nfunction getTarget(el) {\n    if (TGT in el)\n        return el[TGT];\n    return undefined;\n}\n/**\n * Checks if animations are enabled or disabled for a given element.\n * @param el - Any element\n * @returns\n */\nfunction isEnabled(el) {\n    const target = getTarget(el);\n    return target ? enabled.has(target) : false;\n}\n/**\n * Iterate over the children of a given parent.\n * @param parent - A parent element\n * @param callback - A callback\n */\nfunction forEach(parent, ...callbacks) {\n    callbacks.forEach((callback) => callback(parent, options.has(parent)));\n    for (let i = 0; i < parent.children.length; i++) {\n        const child = parent.children.item(i);\n        if (child) {\n            callbacks.forEach((callback) => callback(child, options.has(child)));\n        }\n    }\n}\n/**\n * Always return tuple to provide consistent interface\n */\nfunction getPluginTuple(pluginReturn) {\n    if (Array.isArray(pluginReturn))\n        return pluginReturn;\n    return [pluginReturn];\n}\n/**\n * Determine if config is plugin\n */\nfunction isPlugin(config) {\n    return typeof config === \"function\";\n}\n/**\n * The element in question is remaining in the DOM.\n * @param el - Element to flip\n * @returns\n */\nfunction remain(el) {\n    const oldCoords = coords.get(el);\n    const newCoords = getCoords(el);\n    if (!isEnabled(el))\n        return coords.set(el, newCoords);\n    let animation;\n    if (!oldCoords)\n        return;\n    const pluginOrOptions = getOptions(el);\n    if (typeof pluginOrOptions !== \"function\") {\n        const deltaX = oldCoords.left - newCoords.left;\n        const deltaY = oldCoords.top - newCoords.top;\n        const [widthFrom, widthTo, heightFrom, heightTo] = getTransitionSizes(el, oldCoords, newCoords);\n        const start = {\n            transform: `translate(${deltaX}px, ${deltaY}px)`,\n        };\n        const end = {\n            transform: `translate(0, 0)`,\n        };\n        if (widthFrom !== widthTo) {\n            start.width = `${widthFrom}px`;\n            end.width = `${widthTo}px`;\n        }\n        if (heightFrom !== heightTo) {\n            start.height = `${heightFrom}px`;\n            end.height = `${heightTo}px`;\n        }\n        animation = el.animate([start, end], {\n            duration: pluginOrOptions.duration,\n            easing: pluginOrOptions.easing,\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"remain\", oldCoords, newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    coords.set(el, newCoords);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Adds the element with a transition.\n * @param el - Animates the element being added.\n */\nfunction add(el) {\n    if (NEW in el)\n        delete el[NEW];\n    const newCoords = getCoords(el);\n    coords.set(el, newCoords);\n    const pluginOrOptions = getOptions(el);\n    if (!isEnabled(el))\n        return;\n    let animation;\n    if (typeof pluginOrOptions !== \"function\") {\n        animation = el.animate([\n            { transform: \"scale(.98)\", opacity: 0 },\n            { transform: \"scale(0.98)\", opacity: 0, offset: 0.5 },\n            { transform: \"scale(1)\", opacity: 1 },\n        ], {\n            duration: pluginOrOptions.duration * 1.5,\n            easing: \"ease-in\",\n        });\n    }\n    else {\n        const [keyframes] = getPluginTuple(pluginOrOptions(el, \"add\", newCoords));\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", updatePos.bind(null, el));\n}\n/**\n * Clean up after removing an element from the dom.\n * @param el - Element being removed\n * @param styles - Optional styles that should be removed from the element.\n */\nfunction cleanUp(el, styles) {\n    var _a;\n    el.remove();\n    coords.delete(el);\n    siblings.delete(el);\n    animations.delete(el);\n    (_a = intersections.get(el)) === null || _a === void 0 ? void 0 : _a.disconnect();\n    setTimeout(() => {\n        if (DEL in el)\n            delete el[DEL];\n        Object.defineProperty(el, NEW, { value: true, configurable: true });\n        if (styles && el instanceof HTMLElement) {\n            for (const style in styles) {\n                el.style[style] = \"\";\n            }\n        }\n    }, 0);\n}\n/**\n * Animates the removal of an element.\n * @param el - Element to remove\n */\nfunction remove(el) {\n    var _a;\n    if (!siblings.has(el) || !coords.has(el))\n        return;\n    const [prev, next] = siblings.get(el);\n    Object.defineProperty(el, DEL, { value: true, configurable: true });\n    const finalX = window.scrollX;\n    const finalY = window.scrollY;\n    if (next && next.parentNode && next.parentNode instanceof Element) {\n        next.parentNode.insertBefore(el, next);\n    }\n    else if (prev && prev.parentNode) {\n        prev.parentNode.appendChild(el);\n    }\n    else {\n        (_a = getTarget(el)) === null || _a === void 0 ? void 0 : _a.appendChild(el);\n    }\n    if (!isEnabled(el))\n        return cleanUp(el);\n    const [top, left, width, height] = deletePosition(el);\n    const optionsOrPlugin = getOptions(el);\n    const oldCoords = coords.get(el);\n    if (finalX !== scrollX || finalY !== scrollY) {\n        adjustScroll(el, finalX, finalY, optionsOrPlugin);\n    }\n    let animation;\n    let styleReset = {\n        position: \"absolute\",\n        top: `${top}px`,\n        left: `${left}px`,\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: \"0\",\n        pointerEvents: \"none\",\n        transformOrigin: \"center\",\n        zIndex: \"100\",\n    };\n    if (!isPlugin(optionsOrPlugin)) {\n        Object.assign(el.style, styleReset);\n        animation = el.animate([\n            {\n                transform: \"scale(1)\",\n                opacity: 1,\n            },\n            {\n                transform: \"scale(.98)\",\n                opacity: 0,\n            },\n        ], { duration: optionsOrPlugin.duration, easing: \"ease-out\" });\n    }\n    else {\n        const [keyframes, options] = getPluginTuple(optionsOrPlugin(el, \"remove\", oldCoords));\n        if ((options === null || options === void 0 ? void 0 : options.styleReset) !== false) {\n            styleReset = (options === null || options === void 0 ? void 0 : options.styleReset) || styleReset;\n            Object.assign(el.style, styleReset);\n        }\n        animation = new Animation(keyframes);\n        animation.play();\n    }\n    animations.set(el, animation);\n    animation.addEventListener(\"finish\", cleanUp.bind(null, el, styleReset));\n}\n/**\n * If the element being removed is at the very bottom of the page, and the\n * the page was scrolled into a space being \"made available\" by the element\n * that was removed, the page scroll will have jumped up some amount. We need\n * to offset the jump by the amount that the page was \"automatically\" scrolled\n * up. We can do this by comparing the scroll position before and after the\n * element was removed, and then offsetting by that amount.\n *\n * @param el - The element being deleted\n * @param finalX - The final X scroll position\n * @param finalY - The final Y scroll position\n * @param optionsOrPlugin - The options or plugin\n * @returns\n */\nfunction adjustScroll(el, finalX, finalY, optionsOrPlugin) {\n    const scrollDeltaX = scrollX - finalX;\n    const scrollDeltaY = scrollY - finalY;\n    const scrollBefore = document.documentElement.style.scrollBehavior;\n    const scrollBehavior = getComputedStyle(root).scrollBehavior;\n    if (scrollBehavior === \"smooth\") {\n        document.documentElement.style.scrollBehavior = \"auto\";\n    }\n    window.scrollTo(window.scrollX + scrollDeltaX, window.scrollY + scrollDeltaY);\n    if (!el.parentElement)\n        return;\n    const parent = el.parentElement;\n    let lastHeight = parent.clientHeight;\n    let lastWidth = parent.clientWidth;\n    const startScroll = performance.now();\n    // Here we use a manual scroll animation to keep the element using the same\n    // easing and timing as the parent’s scroll animation.\n    function smoothScroll() {\n        requestAnimationFrame(() => {\n            if (!isPlugin(optionsOrPlugin)) {\n                const deltaY = lastHeight - parent.clientHeight;\n                const deltaX = lastWidth - parent.clientWidth;\n                if (startScroll + optionsOrPlugin.duration > performance.now()) {\n                    window.scrollTo({\n                        left: window.scrollX - deltaX,\n                        top: window.scrollY - deltaY,\n                    });\n                    lastHeight = parent.clientHeight;\n                    lastWidth = parent.clientWidth;\n                    smoothScroll();\n                }\n                else {\n                    document.documentElement.style.scrollBehavior = scrollBefore;\n                }\n            }\n        });\n    }\n    smoothScroll();\n}\n/**\n * Determines the position of the element being removed.\n * @param el - The element being deleted\n * @returns\n */\nfunction deletePosition(el) {\n    const oldCoords = coords.get(el);\n    const [width, , height] = getTransitionSizes(el, oldCoords, getCoords(el));\n    let offsetParent = el.parentElement;\n    while (offsetParent &&\n        (getComputedStyle(offsetParent).position === \"static\" ||\n            offsetParent instanceof HTMLBodyElement)) {\n        offsetParent = offsetParent.parentElement;\n    }\n    if (!offsetParent)\n        offsetParent = document.body;\n    const parentStyles = getComputedStyle(offsetParent);\n    const parentCoords = coords.get(offsetParent) || getCoords(offsetParent);\n    const top = Math.round(oldCoords.top - parentCoords.top) -\n        raw(parentStyles.borderTopWidth);\n    const left = Math.round(oldCoords.left - parentCoords.left) -\n        raw(parentStyles.borderLeftWidth);\n    return [top, left, width, height];\n}\n/**\n * A function that automatically adds animation effects to itself and its\n * immediate children. Specifically it adds effects for adding, moving, and\n * removing DOM elements.\n * @param el - A parent element to add animations to.\n * @param options - An optional object of options.\n */\nfunction autoAnimate(el, config = {}) {\n    if (mutations && resize) {\n        const mediaQuery = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\n        const isDisabledDueToReduceMotion = mediaQuery.matches &&\n            !isPlugin(config) &&\n            !config.disrespectUserMotionPreference;\n        if (!isDisabledDueToReduceMotion) {\n            enabled.add(el);\n            if (getComputedStyle(el).position === \"static\") {\n                Object.assign(el.style, { position: \"relative\" });\n            }\n            forEach(el, updatePos, poll, (element) => resize === null || resize === void 0 ? void 0 : resize.observe(element));\n            if (isPlugin(config)) {\n                options.set(el, config);\n            }\n            else {\n                options.set(el, { duration: 250, easing: \"ease-in-out\", ...config });\n            }\n            mutations.observe(el, { childList: true });\n            parents.add(el);\n        }\n    }\n    return Object.freeze({\n        parent: el,\n        enable: () => {\n            enabled.add(el);\n        },\n        disable: () => {\n            enabled.delete(el);\n        },\n        isEnabled: () => enabled.has(el),\n    });\n}\n/**\n * The vue directive.\n */\nconst vAutoAnimate = {\n    mounted: (el, binding) => {\n        autoAnimate(el, binding.value || {});\n    },\n    // ignore ssr see #96:\n    getSSRProps: () => ({}),\n};\n\nexport { autoAnimate as default, getTransitionSizes, vAutoAnimate };\n","import { useState, useMemo, useCallback } from 'react';\nimport autoAnimate from '../index.mjs';\n\n/**\n * AutoAnimate hook for adding dead-simple transitions and animations to react.\n * @param options - Auto animate options or a plugin\n * @returns\n */\nfunction useAutoAnimate(options) {\n    const [controller, setController] = useState();\n    const memoizedOptions = useMemo(() => options, []);\n    const element = useCallback((node) => {\n        if (node instanceof HTMLElement) {\n            setController(autoAnimate(node, memoizedOptions));\n        }\n        else {\n            setController(undefined);\n        }\n    }, [memoizedOptions]);\n    const setEnabled = useCallback((enabled) => {\n        if (controller) {\n            enabled ? controller.enable() : controller.disable();\n        }\n    }, [controller]);\n    return [element, setEnabled];\n}\n\nexport { useAutoAnimate };\n"],"names":["parents","Set","coords","WeakMap","siblings","animations","intersections","intervals","options","debounces","enabled","WeakSet","root","scrollX","scrollY","TGT","DEL","NEW","handleMutations","mutations","elements","observedNodes","reduce","nodes","mutation","Array","from","addedNodes","removedNodes","every","node","nodeName","target","Element","has","add","i","children","length","child","item","set","previousSibling","nextSibling","getElements","forEach","el","_a","isMounted","isConnected","preExisting","delete","get","cancel","oldCoords","newCoords","getCoords","isEnabled","animation","pluginOrOptions","getOptions","deltaX","left","deltaY","top","widthFrom","widthTo","heightFrom","heightTo","getTransitionSizes","start","transform","concat","end","width","height","animate","duration","easing","keyframes","getPluginTuple","Animation","play","addEventListener","updatePos","bind","remain","prev","next","Object","defineProperty","value","configurable","finalX","window","finalY","parentNode","insertBefore","appendChild","getTarget","cleanUp","offsetParent","parentElement","getComputedStyle","position","HTMLBodyElement","document","body","parentStyles","parentCoords","Math","round","raw","borderTopWidth","borderLeftWidth","deletePosition","optionsOrPlugin","scrollDeltaX","scrollDeltaY","scrollBefore","documentElement","style","scrollBehavior","scrollTo","parent","lastHeight","clientHeight","lastWidth","clientWidth","startScroll","performance","now","smoothScroll","requestAnimationFrame","isPlugin","adjustScroll","styleReset","margin","pointerEvents","transformOrigin","zIndex","assign","opacity","remove","handleResizes","entries","entry","clearTimeout","setTimeout","lowPriority","delay","async","currentAnimation","finished","oldObserver","disconnect","rect","invocations","offsetWidth","offsetHeight","rootMargin","map","px","floor","join","observer","IntersectionObserver","threshold","observe","observePosition","poll","setInterval","random","callback","requestIdleCallback","resize","str","Number","replace","getBoundingClientRect","x","y","p","scrollLeft","scrollTop","getScrollOffset","styles","getPropertyValue","paddingY","paddingTop","paddingBottom","borderBottomWidth","paddingX","paddingLeft","paddingRight","borderRightWidth","_len","arguments","callbacks","_key","pluginReturn","isArray","config","offset","HTMLElement","autoAnimate","undefined","matchMedia","matches","disrespectUserMotionPreference","element","childList","freeze","enable","disable","MutationObserver","ResizeObserver","useAutoAnimate","controller","setController","useState","memoizedOptions","useMemo","useCallback","setEnabled"],"sourceRoot":""}