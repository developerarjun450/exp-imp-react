{"version":3,"file":"static/js/8124.715b834a.chunk.js","mappings":"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","sources":["Landing/components/ProductDetail/DetailComponents/Icons/DocumentIcon.jsx","services/Admin/Course/Continent/InstituteDetailsService.js","controllers/Admin/Course/Continent/InstituteDetailsController.js","views/courses/details/InstituteDetails.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst DocumentIcon = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"green\" d=\"M14.568.075c2.202 1.174 5.938 4.883 7.432 6.881-1.286-.9-4.044-1.657-6.091-1.179.222-1.468-.185-4.534-1.341-5.702zm7.432 10.925v13h-20v-24h8.409c4.857 0 3.335 8 3.335 8 3.009-.745 8.256-.419 8.256 3zm-16 5h5v-4h-5v4zm12 2h-12v1h12v-1zm0-3h-5v1h5v-1zm0-3h-5v1h5v-1z\"/></svg>\n  );\n};\n\nDocumentIcon.propTypes = {\n}\n\nexport default DocumentIcon;\n","import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:4000/api';\n\nconst InstituteDetailsService = {\n  storeDetails: async (token,postData) => {\n    console.log('pppp=>',postData)\n    try {\n      const response = await axios.post(`${API_BASE_URL}/admin/continents/store-educational-institutes`, postData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: token // Pass the token in the Authorization header\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error.message + '--' + error.name;\n    }\n  },\n  fetchDetailsById: async (token,postData) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/admin/continents/${postData.continent}/${postData.instituteId}/institute-detail`, {\n        headers: {\n          Authorization: token // Pass the token in the Authorization header\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error.message + '--' + error.name;\n    }\n  },\n  updateInstitueDetails: async (token,postData) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/admin/continents/institute-detail-update`,postData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: token // Pass the token in the Authorization header\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error.message + '--' + error.name;\n    }\n  },\n  removeFileFromDetails: async (token,postData) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/admin/continents/institute-detail-remove-file`,postData, {\n        headers: {\n          Authorization: token // Pass the token in the Authorization header\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error.message + '--' + error.name;\n    }\n  },\n};\n\nexport default InstituteDetailsService;\n","import InstituteDetailsService from \"../../../../services/Admin/Course/Continent/InstituteDetailsService\";\n\nconst InstituteDetailsController = {\n\n  storeInstituteDetails: async (token,postData) => {\n    try {\n      const response = await InstituteDetailsService.storeDetails(token,postData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  fetchInstituteDetailsById: async (token,postData) => {\n    try {\n      const response = await InstituteDetailsService.fetchDetailsById(token,postData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  removeFileFromDetailsController: async (token,postData) => {\n    try {\n      const response = await InstituteDetailsService.removeFileFromDetails(token,postData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updateInstituteDetail: async (token,postData) => {\n    try {\n      const response = await InstituteDetailsService.updateInstitueDetails(token,postData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n};\n\nexport default InstituteDetailsController;\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate,useLocation } from 'react-router-dom';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n  CFormTextarea,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CNav,\n} from '@coreui/react'\nimport { DocsExample } from '../../../../src/components'\nimport InstituteDetailsController from '../../../controllers/Admin/Course/Continent/InstituteDetailsController'\nimport AuthService from '../../../services/Admin/Auth/AuthServices'\nimport DocumentIcon from '../../../Landing/components/ProductDetail/DetailComponents/Icons/DocumentIcon';\nimport { IconButton } from '@mui/material';\n\nconst Validation = () => {\n  const [validated, setValidated] = useState(false)\n  const [instituteDetails, setInstituteDetails] = useState({})\n  const [backEndValidation, setBackEndValidation] = useState(false)\n  const token = AuthService.getAccessToken();\n  const navigate = useNavigate();\n  const location = useLocation();\n  let { institueData, continent, countryId, instituteId } = location.state || {};\n\n\n  const [areasOfStudy, setAreasOfStudy] = useState([\n    {\n      name: 'areaOfStudy-name',\n      studentCount:'areaOfStudy-studentsCount',\n      rating:'areaOfStudy-rating',\n      nameValue:'',\n      studentCountValue:'',\n      ratingValue:''\n    }\n  ]);\n  const [areaOfStudyEntryCount,setAreaOfStudyEntryCount] = useState(1);\n  const handleAreaOfStudyAddClick = () => {\n    const updatedCount = parseInt(areaOfStudyEntryCount) + 1;\n    setAreaOfStudyEntryCount(updatedCount);\n    console.log(updatedCount);\n\n    setAreasOfStudy((prevAreas) => [\n      ...prevAreas,\n      {\n        name: `areaOfStudy-name-${updatedCount}`,\n        studentCount: `areaOfStudy-studentsCount-${updatedCount}`,\n        rating: `areaOfStudy-rating-${updatedCount}`,\n        nameValue:'',\n        studentCountValue:'',\n        ratingValue:''\n      },\n    ]);\n  };\n\n  const handleAreaOfStudyRemoveClick = () => {\n    const updatedAreasOfStudy = areasOfStudy.slice(0,-1)\n\n    setAreasOfStudy(updatedAreasOfStudy);\n    setAreaOfStudyEntryCount((prevCount) => prevCount - 1);\n  };\n\n  const [teacherList, setTeacherList] = useState([\n    {\n      name:'teacherlist-nameOfTheTeacher',\n      specializedIn:'teacherlist-specializedIn',\n      experience:'teacherlist-expirence',\n      nameValue:'',\n      specializedInValue:'',\n      experienceValue:''\n    }\n  ])\n  const [teacherListCount, setTeacherListCount] = useState(1);\n\n  const handleTeacherListAddClick = () => {\n    const updatedCount = parseInt(teacherListCount) + 1;\n    setTeacherListCount(updatedCount);\n\n    setTeacherList((prevAreas) => [\n      ...prevAreas,\n      {\n        name: `teacherlist-nameOfTheTeacher-${updatedCount}`,\n        specializedIn: `teacherlist-specializedIn-${updatedCount}`,\n        experience: `teacherlist-expirence-${updatedCount}`,\n        nameValue:'',\n        specializedInValue:'',\n        experienceValue:''\n      },\n    ]);\n  };\n\n\n  const [aminitiesList, setAminitiesList] = useState([\n    {name:'aminitiesList-name',description:'aminitiesList-description',nameValue:'',descriptionValue:''}\n  ])\n  const [aminitiesListtCount, setAminitiesListCount] = useState(1);\n\n  const handleAminitiesListAddClick = () => {\n    const updatedCount = parseInt(aminitiesListtCount) + 1;\n    setAminitiesListCount(updatedCount);\n\n    setAminitiesList((prevAreas) => [\n      ...prevAreas,\n      {\n        name: `aminitiesList-name-${updatedCount}`,\n        description: `aminitiesList-description-${updatedCount}`,\n        nameValue:'',\n        descriptionValue:''\n      },\n    ]);\n  };\n\n  const [relatedVideosFilesForPostData, setRelatedVideosFilesForPostData] = useState([]);\n  const [relatedDocumentsFilesForPostData, setRelatedDocumentsFilesForPostData] = useState([]);\n  const [relatedImagesFilesForPostData, setRelatedImagesFilesForPostData] = useState([]);\n\n\n\n  const handleRelatedDocumentsFileChange = (event) => {\n    const selectedFiles = event.target.files;\n    setRelatedDocumentsFilesForPostData(selectedFiles)\n  };\n  const handleRelatedVideosFileChange = (event) => {\n    const selectedFiles = event.target.files;\n    setRelatedVideosFilesForPostData(selectedFiles)\n  };\n  const handleRelatedImagesFileChange = (event) => {\n    const selectedFiles = event.target.files;\n    setRelatedImagesFilesForPostData(selectedFiles)\n  };\n\n  const removeFileFromDetails = async (fileName,fileFieldname) => {\n    let postData = {\n      continent:continent,\n      instituteId:instituteId,\n      fileName:fileName,\n      fileFieldname:fileFieldname\n    }\n    try{\n      let response = await InstituteDetailsController.removeFileFromDetailsController(token,postData);\n      if(response.success){\n        setInstituteDetails(response.data)\n      }\n    } catch(error) {\n      console.log('Error on remove file => ', error)\n    }\n\n  }\n\n  const handleAminitiesListRemoveClick = () => {\n    const updatedAminitiesList = aminitiesList.slice(0,-1)\n\n    setAminitiesList(updatedAminitiesList);\n    setAminitiesListCount((prevCount) => prevCount - 1);\n  };\n\n\n  const handleTeacherListRemoveClick = () => {\n    const updatedTeacherList = teacherList.slice(0,-1)\n\n    setTeacherList(updatedTeacherList);\n    setTeacherListCount((prevCount) => prevCount - 1);\n  };\n\n  const fetchInstituteDetails = async() => {\n    let response = [];\n    try{\n      let postData = {continent:continent,instituteId:instituteId}\n      response = await InstituteDetailsController.fetchInstituteDetailsById(token,postData);\n      console.log('response==>',response)\n      localStorage.setItem('tokenStatus', response.data.tokenStatus);\n      setInstituteDetails(response.data);\n      if(response.data?.amenities.length > 0) {\n        let previousData = response.data?.amenities.map((item,index)=>{\n\n          setAminitiesListCount(index+1);\n          return {\n            name: `aminitiesList-name-${index+1}`,\n            description: `aminitiesList-description-${index+1}`,\n            nameValue:item.name,\n            descriptionValue:item.description\n          }\n        })\n        setAminitiesList(previousData)\n      }\n      if(response.data?.teachersList.length > 0) {\n        let previousData = response.data?.teachersList.map((item,index)=>{\n\n          setTeacherListCount(index+1);\n          return {\n            name: `teacherlist-nameOfTheTeacher-${index+1}`,\n            specializedIn: `teacherlist-specializedIn-${index+1}`,\n            experience: `teacherlist-expirence-${index+1}`,\n            nameValue:item.nameOfTheTeacher,\n            specializedInValue:item.specializedIn,\n            experienceValue:item.experience\n          }\n        })\n        setTeacherList(previousData)\n      }\n      if(response.data?.areasOfStudy.length > 0) {\n        let previousData = response.data?.areasOfStudy.map((item,index)=>{\n\n          setAreaOfStudyEntryCount(index+1);\n          return {\n            name: `areaOfStudy-name-${index+1}`,\n            studentCount: `areaOfStudy-studentsCount-${index+1}`,\n            rating: `areaOfStudy-rating-${index+1}`,\n            nameValue:item.name,\n            studentCountValue:item.studentsCount,\n            ratingValue:item.rating\n          }\n        })\n        setAreasOfStudy(previousData)\n      }\n    } catch(error) {\n      console.log('Error on institute detail fetch => ', error)\n    }\n  }\n\n  useEffect(()=>{\n    fetchInstituteDetails();\n  },[]);\n\n  const handleSubmit = async (event) => {\n    console.log('token:', token);\n\n    const form = event.currentTarget\n    if (form.checkValidity() === false) {\n      event.preventDefault()\n      event.stopPropagation()\n    } else {\n      event.preventDefault(); // Prevent default form submission\n      setValidated(true);\n\n      // Extract data from the form\n      const formData = new FormData(form);\n      let relatedVideos = [];\n      let relatedDocuments = [];\n      let relatedImages = [];\n\n      Object.values(relatedVideosFilesForPostData).forEach((file, index) => {\n        relatedVideos.push(file)\n      });\n      Object.values(relatedDocumentsFilesForPostData).forEach((file, index) => {\n        relatedDocuments.push(file)\n      });\n      Object.values(relatedImagesFilesForPostData).forEach((file, index) => {\n        relatedImages.push(file)\n      });\n      const postData = {};\n      formData.forEach((value, key) => {\n        if(key === 'relatedDocuments') {\n          postData[key] = relatedDocuments;\n        } else if(key === 'relatedImages') {\n          postData[key] = relatedImages;\n        } else if(key === 'relatedVideos') {\n          postData[key] = relatedVideos;\n        } else {\n          postData[key] = value;\n        }\n      });\n\n      postData['countryId'] = countryId;\n      postData['continent'] = continent;\n      postData['instituteId'] = instituteId;\n      let response = [];\n      console.log(postData);\n\n      try{\n        response = await InstituteDetailsController.updateInstituteDetail(token,postData);\n        console.log('response==>',response.data)\n        localStorage.setItem('tokenStatus', response.data.tokenStatus);\n        if(response.success){\n          institueData = institueData.filter((item) => item._id != response.data._id)\n          institueData.push(response.data)\n          institueData = institueData.map((item) => {\n            if (item._id === response.data._id) {\n              return response.data; // Return the updated item\n            } else {\n              return item; // Return the unchanged item\n            }\n          })\n          navigate('/admin/courses/continents/educational-institutes', { replace: true, state: {institueData: institueData,countryId:countryId,continent:continent} });\n        }\n      } catch(error) {\n        console.log(error)\n        if(error.statusCode === 400 ) {\n          let errorDetails = []\n          error.errors.forEach((err) => {\n            errorDetails[err.param] = err.msg;\n          });\n          setBackEndValidation(errorDetails);\n          console.log('backEndValidation =>', backEndValidation);\n        }\n      }\n\n    }\n    setValidated(true)\n  }\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Institute</strong> <small>Update Institue Details</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-body-secondary small\">\n              Update education details here.\n            </p>\n            <p className=\"text-body-secondary small\">\n              Under maintanace\n            </p>\n            <DocsExample href=\"forms/validation\">\n\n            <CForm\n      className=\"row g-3 needs-validation\"\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n    >\n      <CCol md={4}>\n        <CFormLabel htmlFor=\"validationCustom01\">Institute Name</CFormLabel>\n        <CFormInput type=\"text\" id=\"validationCustom01\" style={{}} defaultValue={instituteDetails.name} name='name' required />\n        {backEndValidation['name'] ?  (\n          <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['name']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel htmlFor=\"validationCustom02\">Short Name</CFormLabel>\n        <CFormInput type=\"text\" id=\"validationCustom02\" defaultValue={instituteDetails.shortName} name='shortName' required />\n        {backEndValidation['shortName'] ?  (\n          <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['shortName']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCol md={4}>\n        <CFormLabel htmlFor=\"validationCustomUsername\">Email</CFormLabel>\n        <CInputGroup className=\"has-validation\">\n          <CInputGroupText id=\"inputGroupPrepend\">@</CInputGroupText>\n          <CFormInput\n            type=\"text\"\n            id=\"validationCustomUsername\"\n            defaultValue={instituteDetails.email}\n            name='email'\n            aria-describedby=\"inputGroupPrepend\"\n            required\n          />\n          {/* <CFormFeedback invalid>Please choose a short name.</CFormFeedback> */}\n           {backEndValidation['email'] ?  (\n              <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['email']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n        </CInputGroup>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom03\">City</CFormLabel>\n        <CFormInput type=\"text\" id=\"validationCustom03\" defaultValue={instituteDetails.city} name='city' required />\n        {/* <CFormFeedback invalid>Please provide a valid city.</CFormFeedback> */}\n        {backEndValidation['city'] ?  (\n            <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['city']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCol md={3}>\n        <CFormLabel htmlFor=\"validationCustom04\">District</CFormLabel>\n        {/* <CFormSelect id=\"validationCustom04\">\n          <option disabled>Choose...</option>\n          <option>...</option>\n        </CFormSelect> */}\n        <CFormInput type=\"text\" id=\"validationCustom04\" defaultValue={instituteDetails.district} name='district' required />\n        {/* <CFormFeedback invalid>Please provide a valid district.</CFormFeedback> */}\n        {backEndValidation['district'] ?  (\n                    // <span style={{color:'#ea868f', fontSize:'0.875em'}}>{backEndValidation['district']}</span>\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['district']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCol md={3}>\n        <CFormLabel htmlFor=\"validationCustom05\">State</CFormLabel>\n        <CFormInput type=\"text\" id=\"validationCustom05\" defaultValue={instituteDetails.state} name='state' required />\n        {/* <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback> */}\n        {backEndValidation['state'] ?  (\n                    // <span style={{color:'#ea868f', fontSize:'0.875em'}}>{backEndValidation['state']}</span>\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['state']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom06\">Phone</CFormLabel>\n        <CFormInput type=\"text\" id=\"validationCustom06\" defaultValue={instituteDetails.phone} name='phone' required />\n        {/* <CFormFeedback invalid>Please provide a valid phone.</CFormFeedback> */}\n        {backEndValidation['phone'] ?  (\n                    // <span style={{color:'#ea868f', fontSize:'0.875em'}}>{backEndValidation['name']}</span>\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['phone']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom07\">Location</CFormLabel>\n        <CFormInput type=\"text\" id=\"validationCustom07\" defaultValue={instituteDetails.location} name='location' required />\n        {/* <CFormFeedback invalid>Please provide a valid location with landmark.</CFormFeedback> */}\n        {backEndValidation['location'] ?  (\n                    // <span style={{color:'#ea868f', fontSize:'0.875em'}}>{backEndValidation['name']}</span>\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['location']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCol md={12}>\n        <CFormLabel htmlFor=\"validationCustom06\">Description</CFormLabel>\n        <CFormTextarea type=\"text\" id=\"validationCustom06\" name='description' value={instituteDetails.description} required />\n        {/* <CFormFeedback invalid>Please provide a valid phone.</CFormFeedback> */}\n        {backEndValidation['description'] ?  (\n                    // <span style={{color:'#ea868f', fontSize:'0.875em'}}>{backEndValidation['name']}</span>\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['description']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n      </CCol>\n      <CCardHeader>\n        <strong>Documents</strong>\n      </CCardHeader>\n\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom08\">Title Image</CFormLabel>\n        <CFormInput type=\"file\" accept=\"image/*\"  id=\"validationCustom08\" name='titleImage'  />\n        {/* <CFormFeedback invalid>Please provide a valid location with landmark.</CFormFeedback> */}\n        {backEndValidation['titleImage'] ?  (\n                    // <span style={{color:'#ea868f', fontSize:'0.875em'}}>{backEndValidation['name']}</span>\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['titleImage']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n        <div style={{display: 'grid',gridTemplateColumns:'repeat(4,1fr)',gap:'10px'}}>\n          {instituteDetails.titleImage && instituteDetails.titleImage != '' ? (\n            <div style={{textAlign:'center',marginTop:'10px'}}>\n            <div>\n              <img src={instituteDetails.titleImage} alt='Title image' width='80px' height='65px' /><br></br>\n              <CButton color=\"danger\" onClick={() =>removeFileFromDetails(instituteDetails.titleImage,'titleImage')} style={{color:'white',marginTop:'10px'}} >\n                Remove\n              </CButton>\n            </div>\n          </div>\n          ):(\n            <div style={{textAlign:'center',marginTop:'10px'}}>\n\n          </div>\n          )}\n        </div>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom09\">Related Documents</CFormLabel>\n        <CFormInput type=\"file\" id=\"validationCustom09\" onChange={handleRelatedDocumentsFileChange} multiple accept=\".doc, .docx, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, .xls, .xlsx, application/vnd.ms-excel, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" name='relatedDocuments'  />\n        {backEndValidation['relatedDocuments'] ?  (\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['relatedDocuments']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n         <div style={{display: 'grid',gridTemplateColumns:'repeat(4,1fr)',gap:'10px'}}>\n          {instituteDetails.relatedDocuments && instituteDetails.relatedDocuments.length > 0 ? (\n            instituteDetails.relatedDocuments.map((item,index) => {\n              const parts = item.split('/');\n              const fileNameWithExtension = parts[parts.length - 1];\n              let fileName = fileNameWithExtension;\n              if (fileNameWithExtension.length > 6) {\n                const fileNameWithoutExtension = fileNameWithExtension.split('.')[0];\n                const truncatedFileName = fileNameWithoutExtension.slice(0, 6) + '...';\n                fileName =  truncatedFileName + '.' + fileNameWithExtension.split('.').pop();\n              }\n              return(\n                  <div style={{textAlign:'center'}} key={index}>\n                    <IconButton\n                      sx={{ color: \"#fff\", bgcolor: \"transparent\", alignSelf: \"flex-end\" }}\n                    >\n                      <DocumentIcon></DocumentIcon>\n                    </IconButton>\n                    <br></br>\n                  <a  href={item}>\n                    {fileName}\n                  </a>\n                    <br></br>\n                    <CButton color=\"danger\" onClick={() => removeFileFromDetails(item,'relatedDocuments')} style={{color:'white',marginTop:'10px'}} >\n                      Remove\n                    </CButton>\n                  </div>\n              )\n            })\n          ) : (\n          <div style={{textAlign:'center'}}>\n          </div>\n          )}\n        </div>\n\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom10\">Related Videos</CFormLabel>\n        <CFormInput type=\"file\" id=\"validationCustom10\" multiple accept=\".mp4, .avi, .mkv,.webm\" name='relatedVideos'  onChange={handleRelatedVideosFileChange} />\n        {backEndValidation['relatedVideos'] ?  (\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['relatedVideos']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n        <div style={{display: 'grid',gridTemplateColumns:'repeat(4,1fr)',gap:'10px'}}>\n          {instituteDetails.relatedVideos && instituteDetails.relatedVideos.length > 0 ? (\n            instituteDetails.relatedVideos.map((item,index) => {\n\n              return(\n                <div key={index} style={{textAlign:'center',marginTop:'10px'}}>\n                  <div>\n                    <video width=\"133\" height=\"80\" controls={true}>\n                      <source src={item} type={`video/${item.split('.').pop().toLowerCase()}`} />\n                      Your browser does not support the video tag.\n                    </video>\n                    <br></br>\n                    <CButton color=\"danger\" onClick={() => removeFileFromDetails(item,'relatedVideos')} style={{color:'white'}} >\n                      Remove\n                    </CButton>\n                  </div>\n                  </div>\n              )\n            })\n          ) : (\n          <div style={{textAlign:'center'}}>\n          </div>\n          )}\n        </div>\n      </CCol>\n      <CCol md={6}>\n        <CFormLabel htmlFor=\"validationCustom11\">Related Images</CFormLabel>\n        <CFormInput type=\"file\" id=\"validationCustom11\" multiple onChange={handleRelatedImagesFileChange} accept=\"image/*\" name='relatedImages'  />\n        {backEndValidation['relatedImages'] ?  (\n                    <CFormFeedback style={{display:'block'}} invalid>{backEndValidation['relatedImages']}</CFormFeedback>\n        ) : (\n          <CFormFeedback valid>Looks good!</CFormFeedback>\n        )}\n        <div style={{display: 'grid',gridTemplateColumns:'repeat(4,1fr)',gap:'10px'}}>\n          {instituteDetails.relatedImages && instituteDetails.relatedImages.length > 0 ? (\n            instituteDetails.relatedImages.map((item,index) => {\n\n              return(\n                <div key={index} style={{textAlign:'center',marginTop:'10px'}}>\n                  <div>\n                    <img src={item} alt='related image' width='80px' height='65px' /><br></br>\n                    <br></br>\n                    <CButton color=\"danger\" onClick={() => removeFileFromDetails(item,'relatedImages')} style={{color:'white'}} >\n                      Remove\n                    </CButton>\n                  </div>\n                  </div>\n              )\n            })\n          ) : (\n          <div style={{textAlign:'center'}}>\n          </div>\n          )}\n        </div>\n      </CCol>\n\n\n      <CNav variant=\"underline-border\"></CNav>\n      <CCardHeader>\n        <strong>Areas Of Study</strong>\n      </CCardHeader>\n      {areasOfStudy && areasOfStudy.map((area,index) =>(\n        <React.Fragment key={index}>\n            <CCol md={4}>\n              <CFormLabel htmlFor=\"validationCustom12\">Name</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom12\" value={area.nameValue} name={area.name}  />\n\n            </CCol>\n            <CCol md={4}>\n              <CFormLabel htmlFor=\"validationCustom13\">Number of students</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom13\" value={area.studentCountValue} name={area.studentCount}  />\n\n            </CCol>\n            <CCol md={4}>\n              <CFormLabel htmlFor=\"validationCustom14\">Rating out of 10</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom14\" value={area.ratingValue} name={area.rating}  />\n            </CCol>\n        </React.Fragment>\n      ))}\n       <CCol xs={12} className='text-end'>\n        <CButton color=\"primary\" style={{marginRight: '20px'}} onClick={handleAreaOfStudyAddClick}>\n          Add New Entry\n        </CButton>\n        {areasOfStudy && areasOfStudy.length > 1 && (\n              <CButton color=\"danger\" style={{color:'white'}} onClick={() => handleAreaOfStudyRemoveClick()}>\n                Remove Last Entry\n              </CButton>\n            )}\n      </CCol>\n\n      <CNav variant=\"underline-border\"></CNav>\n      <CCardHeader>\n        <strong>Areas Of Study - Teacher list</strong>\n      </CCardHeader>\n      {teacherList && teacherList.map((teacher,index) =>(\n        <React.Fragment key={index}>\n            <CCol md={4}>\n              <CFormLabel htmlFor=\"validationCustom12\">Name</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom12\" value={teacher.nameValue} name={teacher.name}  />\n\n            </CCol>\n            <CCol md={4}>\n              <CFormLabel htmlFor=\"validationCustom13\">specialized In</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom13\" value={teacher.specializedInValue} name={teacher.specializedIn}  />\n\n            </CCol>\n            <CCol md={4}>\n              <CFormLabel htmlFor=\"validationCustom14\">Experience in years</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom14\" value={teacher.experienceValue} name={teacher.experience}  />\n            </CCol>\n\n        </React.Fragment>\n      ))}\n       <CCol xs={12} className='text-end'>\n        <CButton color=\"primary\" style={{marginRight: '20px'}} onClick={handleTeacherListAddClick}>\n          Add New Entry\n        </CButton>\n        {teacherList && teacherList.length > 1 && (\n              <CButton color=\"danger\" style={{color:'white'}} onClick={() => handleTeacherListRemoveClick()}>\n                Remove Last Entry\n              </CButton>\n            )}\n      </CCol>\n      <CCardHeader>\n        <strong>Aminities</strong>\n      </CCardHeader>\n      {aminitiesList && aminitiesList.map((aminity,index) =>(\n        <React.Fragment key={index}>\n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom12\">Name</CFormLabel>\n              <CFormInput type=\"text\" id=\"validationCustom12\" value={aminity.nameValue} name={aminity.name}  />\n\n            </CCol>\n            <CCol md={6}>\n              <CFormLabel htmlFor=\"validationCustom13\">Description</CFormLabel>\n              <CFormTextarea type=\"text\" id=\"validationCustom13\" value={aminity.descriptionValue} name={aminity.description}  />\n\n            </CCol>\n\n        </React.Fragment>\n      ))}\n       <CCol xs={12} className='text-end'>\n        <CButton color=\"primary\" style={{marginRight: '20px'}} onClick={handleAminitiesListAddClick}>\n          Add New Entry\n        </CButton>\n        {aminitiesList && aminitiesList.length > 1 && (\n              <CButton color=\"danger\" style={{color:'white'}} onClick={() => handleAminitiesListRemoveClick()}>\n                Remove Last Entry\n              </CButton>\n            )}\n      </CCol>\n\n      <CCol xs={12}>\n        <CButton color=\"success\" type=\"submit\">\n          Update\n        </CButton>\n      </CCol>\n    </CForm>\n\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n\n    </CRow>\n  )\n}\n\nexport default Validation\n"],"names":["DocumentIcon","_jsx","xmlns","width","height","viewBox","children","fill","d","API_BASE_URL","process","storeDetails","async","token","postData","console","log","axios","post","concat","headers","Authorization","data","error","response","message","name","fetchDetailsById","get","continent","instituteId","updateInstitueDetails","removeFileFromDetails","storeInstituteDetails","InstituteDetailsService","fetchInstituteDetailsById","removeFileFromDetailsController","updateInstituteDetail","Validation","validated","setValidated","useState","instituteDetails","setInstituteDetails","backEndValidation","setBackEndValidation","AuthService","getAccessToken","navigate","useNavigate","location","useLocation","institueData","countryId","state","areasOfStudy","setAreasOfStudy","studentCount","rating","nameValue","studentCountValue","ratingValue","areaOfStudyEntryCount","setAreaOfStudyEntryCount","teacherList","setTeacherList","specializedIn","experience","specializedInValue","experienceValue","teacherListCount","setTeacherListCount","aminitiesList","setAminitiesList","description","descriptionValue","aminitiesListtCount","setAminitiesListCount","relatedVideosFilesForPostData","setRelatedVideosFilesForPostData","relatedDocumentsFilesForPostData","setRelatedDocumentsFilesForPostData","relatedImagesFilesForPostData","setRelatedImagesFilesForPostData","fileName","fileFieldname","InstituteDetailsController","success","useEffect","_response$data","_response$data3","_response$data5","localStorage","setItem","tokenStatus","amenities","length","_response$data2","previousData","map","item","index","teachersList","_response$data4","nameOfTheTeacher","_response$data6","studentsCount","fetchInstituteDetails","CRow","CCol","xs","_jsxs","CCard","className","CCardHeader","CCardBody","DocsExample","href","CForm","noValidate","onSubmit","form","event","currentTarget","checkValidity","preventDefault","stopPropagation","formData","FormData","relatedVideos","relatedDocuments","relatedImages","Object","values","forEach","file","push","value","key","filter","_id","replace","statusCode","errorDetails","errors","err","param","msg","md","CFormLabel","htmlFor","CFormInput","type","id","style","defaultValue","required","CFormFeedback","display","invalid","valid","shortName","CInputGroup","CInputGroupText","email","city","district","phone","CFormTextarea","accept","gridTemplateColumns","gap","titleImage","textAlign","marginTop","src","alt","CButton","color","onClick","onChange","selectedFiles","target","files","multiple","parts","split","fileNameWithExtension","slice","pop","IconButton","sx","bgcolor","alignSelf","controls","toLowerCase","CNav","variant","area","React","marginRight","handleAreaOfStudyAddClick","updatedCount","parseInt","prevAreas","handleAreaOfStudyRemoveClick","updatedAreasOfStudy","prevCount","teacher","handleTeacherListAddClick","handleTeacherListRemoveClick","updatedTeacherList","aminity","handleAminitiesListAddClick","handleAminitiesListRemoveClick","updatedAminitiesList"],"sourceRoot":""}