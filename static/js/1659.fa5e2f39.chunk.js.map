{"version":3,"file":"static/js/1659.fa5e2f39.chunk.js","mappings":"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","sources":["views/dashboard/MainChart.js","services/Admin/Dashboard/DashboardService.js","controllers/Admin/Dashboard/DashboardController.js","views/dashboard/Dashboard.js","views/widgets/WidgetsBrand.js","views/widgets/WidgetsDropdown.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\n\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle } from '@coreui/utils'\n\nconst MainChart = () => {\n  const chartRef = useRef(null)\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (chartRef.current) {\n        setTimeout(() => {\n          chartRef.current.options.scales.x.grid.borderColor = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartRef.current.options.scales.x.grid.color = getStyle('--cui-border-color-translucent')\n          chartRef.current.options.scales.x.ticks.color = getStyle('--cui-body-color')\n          chartRef.current.options.scales.y.grid.borderColor = getStyle(\n            '--cui-border-color-translucent',\n          )\n          chartRef.current.options.scales.y.grid.color = getStyle('--cui-border-color-translucent')\n          chartRef.current.options.scales.y.ticks.color = getStyle('--cui-body-color')\n          chartRef.current.update()\n        })\n      }\n    })\n  }, [chartRef])\n\n  const random = () => Math.round(Math.random() * 100)\n\n  return (\n    <>\n      <CChartLine\n        ref={chartRef}\n        style={{ height: '300px', marginTop: '40px' }}\n        data={{\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          datasets: [\n            {\n              label: 'My First dataset',\n              backgroundColor: `rgba(${getStyle('--cui-info-rgb')}, .1)`,\n              borderColor: getStyle('--cui-info'),\n              pointHoverBackgroundColor: getStyle('--cui-info'),\n              borderWidth: 2,\n              data: [\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n              ],\n              fill: true,\n            },\n            {\n              label: 'My Second dataset',\n              backgroundColor: 'transparent',\n              borderColor: getStyle('--cui-success'),\n              pointHoverBackgroundColor: getStyle('--cui-success'),\n              borderWidth: 2,\n              data: [\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n                random(50, 200),\n              ],\n            },\n            {\n              label: 'My Third dataset',\n              backgroundColor: 'transparent',\n              borderColor: getStyle('--cui-danger'),\n              pointHoverBackgroundColor: getStyle('--cui-danger'),\n              borderWidth: 1,\n              borderDash: [8, 5],\n              data: [65, 65, 65, 65, 65, 65, 65],\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              display: false,\n            },\n          },\n          scales: {\n            x: {\n              grid: {\n                color: getStyle('--cui-border-color-translucent'),\n                drawOnChartArea: false,\n              },\n              ticks: {\n                color: getStyle('--cui-body-color'),\n              },\n            },\n            y: {\n              border: {\n                color: getStyle('--cui-border-color-translucent'),\n              },\n              grid: {\n                color: getStyle('--cui-border-color-translucent'),\n              },\n              ticks: {\n                beginAtZero: true,\n                color: getStyle('--cui-body-color'),\n                max: 250,\n                maxTicksLimit: 5,\n                stepSize: Math.ceil(250 / 5),\n              },\n            },\n          },\n          elements: {\n            line: {\n              tension: 0.4,\n            },\n            point: {\n              radius: 0,\n              hitRadius: 10,\n              hoverRadius: 4,\n              hoverBorderWidth: 3,\n            },\n          },\n        }}\n      />\n    </>\n  )\n}\n\nexport default MainChart\n","import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:4000/api';\n\nconst DashboardService = {\n  dashboardDetails: async (token) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/admin/dashboard`, {\n        headers: {\n          Authorization: token // Pass the token in the Authorization header\n        },\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error.message + '--' + error.name;\n    }\n  },\n};\n\nexport default DashboardService;\n","import DashboardService from \"../../../services/Admin/Dashboard/DashboardService\";\n\nconst DashboardController = {\n  fetchDashboardData: async (token) => {\n    try {\n      const response = await DashboardService.dashboardDetails(token);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n};\n\nexport default DashboardController;\n","import React, { useState, useEffect} from 'react'\nimport { Navigate,useNavigate } from 'react-router-dom';\nimport classNames from 'classnames'\n\nimport {\n  CAvatar,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cibCcAmex,\n  cibCcApplePay,\n  cibCcMastercard,\n  cibCcPaypal,\n  cibCcStripe,\n  cibCcVisa,\n  cibGoogle,\n  cibFacebook,\n  cibLinkedin,\n  cifBr,\n  cifEs,\n  cifFr,\n  cifIn,\n  cifPl,\n  cifUs,\n  cibTwitter,\n  cilCloudDownload,\n  cilPeople,\n  cilUser,\n  cilUserFemale,\n} from '@coreui/icons'\n\nimport avatar1 from '../../../src/assets/images/avatars/1.jpg'\nimport avatar2 from '../../../src/assets/images/avatars/2.jpg'\nimport avatar3 from '../../../src/assets/images/avatars/3.jpg'\nimport avatar4 from '../../../src/assets/images/avatars/4.jpg'\nimport avatar5 from '../../../src/assets/images/avatars/5.jpg'\nimport avatar6 from '../../../src/assets/images/avatars/6.jpg'\n\nimport WidgetsBrand from '../widgets/WidgetsBrand'\nimport WidgetsDropdown from '../widgets/WidgetsDropdown'\nimport MainChart from './MainChart'\n\nimport DashboardController from '../../controllers/Admin/Dashboard/DashboardController'\nimport AuthService from '../../services/Admin/Auth/AuthServices'\n\nconst Dashboard = () => {\n\n  const [data, setData] = useState(null);\n  const navigate = useNavigate();\n\n  const fetchData = async() => {\n    const token = AuthService.getAccessToken();\n    let response = [];\n    try{\n\n      response = await DashboardController.fetchDashboardData(token);\n      console.log('response==>',response)\n      localStorage.setItem('tokenStatus', response.data.tokenStatus);\n      setData(response.data);\n    } catch (error) {\n      if (error.response) {\n        console.log('Error Response:', error.response.data);\n        console.log('Status Code:', error.response.status);\n        navigate('/admin/login', { replace: true });\n      } else if (error.request) {\n        console.log('No response received:', error.request);\n      } else {\n        navigate('/admin/login', { replace: true });\n        console.log('Error:', error.message);\n      }\n    }\n\n  }\n\n  useEffect(()=>{\n    fetchData();\n  },[]);\n\n  const progressExample = [\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\n  ]\n\n  const progressGroupExample1 = [\n    { title: 'Monday', value1: 34, value2: 78 },\n    { title: 'Tuesday', value1: 56, value2: 94 },\n    { title: 'Wednesday', value1: 12, value2: 67 },\n    { title: 'Thursday', value1: 43, value2: 91 },\n    { title: 'Friday', value1: 22, value2: 73 },\n    { title: 'Saturday', value1: 53, value2: 82 },\n    { title: 'Sunday', value1: 9, value2: 69 },\n  ]\n\n  const progressGroupExample2 = [\n    { title: 'Male', icon: cilUser, value: 53 },\n    { title: 'Female', icon: cilUserFemale, value: 43 },\n  ]\n\n  const progressGroupExample3 = [\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\n  ]\n\n  const tableExample = [\n    {\n      avatar: { src: avatar1, status: 'success' },\n      user: {\n        name: 'Yiorgos Avraamu',\n        new: true,\n        registered: 'Jan 1, 2023',\n      },\n      country: { name: 'USA', flag: cifUs },\n      usage: {\n        value: 50,\n        period: 'Jun 11, 2023 - Jul 10, 2023',\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n      activity: '10 sec ago',\n    },\n    {\n      avatar: { src: avatar2, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n        registered: 'Jan 1, 2023',\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2023 - Jul 10, 2023',\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: avatar3, status: 'warning' },\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2023' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: 'Jun 11, 2023 - Jul 10, 2023',\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: avatar4, status: 'secondary' },\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2023' },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 98,\n        period: 'Jun 11, 2023 - Jul 10, 2023',\n        color: 'danger',\n      },\n      payment: { name: 'PayPal', icon: cibCcPaypal },\n      activity: 'Last month',\n    },\n    {\n      avatar: { src: avatar5, status: 'success' },\n      user: {\n        name: 'Agapetus Tadeáš',\n        new: true,\n        registered: 'Jan 1, 2023',\n      },\n      country: { name: 'Spain', flag: cifEs },\n      usage: {\n        value: 22,\n        period: 'Jun 11, 2023 - Jul 10, 2023',\n        color: 'primary',\n      },\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: avatar6, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n        registered: 'Jan 1, 2023',\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: 'Jun 11, 2023 - Jul 10, 2023',\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcAmex },\n      activity: 'Last week',\n    },\n  ]\n\n\n  return (\n    <>\n      <WidgetsDropdown className=\"mb-4\" />\n      <CCard className=\"mb-4\">\n        <CCardBody>\n          <CRow>\n            <CCol sm={5}>\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\n                Traffic\n              </h4>\n              <div className=\"small text-body-secondary\">January - July 2023</div>\n            </CCol>\n            <CCol sm={7} className=\"d-none d-md-block\">\n              <CButton color=\"primary\" className=\"float-end\">\n                <CIcon icon={cilCloudDownload} />\n              </CButton>\n              <CButtonGroup className=\"float-end me-3\">\n                {['Day', 'Month', 'Year'].map((value) => (\n                  <CButton\n                    color=\"outline-secondary\"\n                    key={value}\n                    className=\"mx-0\"\n                    active={value === 'Month'}\n                  >\n                    {value}\n                  </CButton>\n                ))}\n              </CButtonGroup>\n            </CCol>\n          </CRow>\n          <MainChart />\n        </CCardBody>\n        <CCardFooter>\n          <CRow\n            xs={{ cols: 1, gutter: 4 }}\n            sm={{ cols: 2 }}\n            lg={{ cols: 4 }}\n            xl={{ cols: 5 }}\n            className=\"mb-2 text-center\"\n          >\n            {progressExample.map((item, index, items) => (\n              <CCol\n                className={classNames({\n                  'd-none d-xl-block': index + 1 === items.length,\n                })}\n                key={index}\n              >\n                <div className=\"text-body-secondary\">{item.title}</div>\n                <div className=\"fw-semibold text-truncate\">\n                  {item.value} ({item.percent}%)\n                </div>\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\n              </CCol>\n            ))}\n          </CRow>\n        </CCardFooter>\n      </CCard>\n      <WidgetsBrand className=\"mb-4\" withCharts />\n      <CRow>\n        <CCol xs>\n          <CCard className=\"mb-4\">\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\n            <CCardBody>\n              <CRow>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\n                        <div className=\"text-body-secondary text-truncate small\">New Clients</div>\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\n                      </div>\n                    </CCol>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">\n                          Recurring Clients\n                        </div>\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n                  <hr className=\"mt-0\" />\n                  {progressGroupExample1.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-prepend\">\n                        <span className=\"text-body-secondary small\">{item.title}</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"info\" value={item.value1} />\n                        <CProgress thin color=\"danger\" value={item.value2} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n                <CCol xs={12} md={6} xl={6}>\n                  <CRow>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">Pageviews</div>\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\n                      </div>\n                    </CCol>\n                    <CCol xs={6}>\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\n                        <div className=\"text-body-secondary text-truncate small\">Organic</div>\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\n                      </div>\n                    </CCol>\n                  </CRow>\n\n                  <hr className=\"mt-0\" />\n\n                  {progressGroupExample2.map((item, index) => (\n                    <div className=\"progress-group mb-4\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"warning\" value={item.value} />\n                      </div>\n                    </div>\n                  ))}\n\n                  <div className=\"mb-5\"></div>\n\n                  {progressGroupExample3.map((item, index) => (\n                    <div className=\"progress-group\" key={index}>\n                      <div className=\"progress-group-header\">\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\n                        <span>{item.title}</span>\n                        <span className=\"ms-auto fw-semibold\">\n                          {item.value}{' '}\n                          <span className=\"text-body-secondary small\">({item.percent}%)</span>\n                        </span>\n                      </div>\n                      <div className=\"progress-group-bars\">\n                        <CProgress thin color=\"success\" value={item.percent} />\n                      </div>\n                    </div>\n                  ))}\n                </CCol>\n              </CRow>\n\n              <br />\n\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead className=\"text-nowrap\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"bg-body-tertiary text-center\">\n                      <CIcon icon={cilPeople} />\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"bg-body-tertiary\">User</CTableHeaderCell>\n                    <CTableHeaderCell className=\"bg-body-tertiary text-center\">\n                      Country\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"bg-body-tertiary\">Usage</CTableHeaderCell>\n                    <CTableHeaderCell className=\"bg-body-tertiary text-center\">\n                      Payment Method\n                    </CTableHeaderCell>\n                    <CTableHeaderCell className=\"bg-body-tertiary\">Activity</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {tableExample.map((item, index) => (\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\n                      <CTableDataCell className=\"text-center\">\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div>{item.user.name}</div>\n                        <div className=\"small text-body-secondary text-nowrap\">\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\n                          {item.user.registered}\n                        </div>\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"d-flex justify-content-between text-nowrap\">\n                          <div className=\"fw-semibold\">{item.usage.value}%</div>\n                          <div className=\"ms-3\">\n                            <small className=\"text-body-secondary\">{item.usage.period}</small>\n                          </div>\n                        </div>\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\n                      </CTableDataCell>\n                      <CTableDataCell className=\"text-center\">\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\n                      </CTableDataCell>\n                      <CTableDataCell>\n                        <div className=\"small text-body-secondary text-nowrap\">Last login</div>\n                        <div className=\"fw-semibold text-nowrap\">{item.activity}</div>\n                      </CTableDataCell>\n                    </CTableRow>\n                  ))}\n                </CTableBody>\n              </CTable>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CWidgetStatsD, CRow, CCol } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'\nimport { CChart } from '@coreui/react-chartjs'\n\nconst WidgetsBrand = (props) => {\n  const chartOptions = {\n    elements: {\n      line: {\n        tension: 0.4,\n      },\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 4,\n        hoverBorderWidth: 3,\n      },\n    },\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    scales: {\n      x: {\n        display: false,\n      },\n      y: {\n        display: false,\n      },\n    },\n  }\n\n  return (\n    <CRow className={props.className} xs={{ gutter: 4 }}>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [65, 59, 84, 84, 51, 55, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibFacebook} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'friends', value: '89K' },\n            { title: 'feeds', value: '459' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#3b5998',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [1, 13, 9, 17, 34, 41, 38],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibTwitter} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'followers', value: '973k' },\n            { title: 'tweets', value: '1.792' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#00aced',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [78, 81, 80, 45, 34, 12, 40],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cibLinkedin} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'contacts', value: '500' },\n            { title: 'feeds', value: '1.292' },\n          ]}\n          style={{\n            '--cui-card-cap-bg': '#4875b4',\n          }}\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsD\n          color=\"warning\"\n          {...(props.withCharts && {\n            chart: (\n              <CChart\n                className=\"position-absolute w-100 h-100\"\n                type=\"line\"\n                data={{\n                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                  datasets: [\n                    {\n                      backgroundColor: 'rgba(255,255,255,.1)',\n                      borderColor: 'rgba(255,255,255,.55)',\n                      pointHoverBackgroundColor: '#fff',\n                      borderWidth: 2,\n                      data: [35, 23, 56, 22, 97, 23, 64],\n                      fill: true,\n                    },\n                  ],\n                }}\n                options={chartOptions}\n              />\n            ),\n          })}\n          icon={<CIcon icon={cilCalendar} height={52} className=\"my-4 text-white\" />}\n          values={[\n            { title: 'events', value: '12+' },\n            { title: 'meetings', value: '4' },\n          ]}\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsBrand.propTypes = {\n  className: PropTypes.string,\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsBrand\n","import React, { useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  CRow,\n  CCol,\n  CDropdown,\n  CDropdownMenu,\n  CDropdownItem,\n  CDropdownToggle,\n  CWidgetStatsA,\n} from '@coreui/react'\nimport { getStyle } from '@coreui/utils'\nimport { CChartBar, CChartLine } from '@coreui/react-chartjs'\nimport CIcon from '@coreui/icons-react'\nimport { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'\n\nconst WidgetsDropdown = (props) => {\n  const widgetChartRef1 = useRef(null)\n  const widgetChartRef2 = useRef(null)\n\n  useEffect(() => {\n    document.documentElement.addEventListener('ColorSchemeChange', () => {\n      if (widgetChartRef1.current) {\n        setTimeout(() => {\n          widgetChartRef1.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-primary')\n          widgetChartRef1.current.update()\n        })\n      }\n\n      if (widgetChartRef2.current) {\n        setTimeout(() => {\n          widgetChartRef2.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-info')\n          widgetChartRef2.current.update()\n        })\n      }\n    })\n  }, [widgetChartRef1, widgetChartRef2])\n\n  return (\n    <CRow className={props.className} xs={{ gutter: 4 }}>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"primary\"\n          value={\n            <>\n              26K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-12.4% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Users\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              ref={widgetChartRef1}\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-primary'),\n                    data: [65, 59, 84, 84, 51, 55, 40],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: 30,\n                    max: 89,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"info\"\n          value={\n            <>\n              $6.200{' '}\n              <span className=\"fs-6 fw-normal\">\n                (40.9% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Income\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              ref={widgetChartRef2}\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'transparent',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    pointBackgroundColor: getStyle('--cui-info'),\n                    data: [1, 18, 9, 17, 34, 22, 11],\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    min: -9,\n                    max: 39,\n                    display: false,\n                    grid: {\n                      display: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 1,\n                  },\n                  point: {\n                    radius: 4,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"warning\"\n          value={\n            <>\n              2.49%{' '}\n              <span className=\"fs-6 fw-normal\">\n                (84.7% <CIcon icon={cilArrowTop} />)\n              </span>\n            </>\n          }\n          title=\"Conversion Rate\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartLine\n              className=\"mt-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40],\n                    fill: true,\n                  },\n                ],\n              }}\n              options={{\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                maintainAspectRatio: false,\n                scales: {\n                  x: {\n                    display: false,\n                  },\n                  y: {\n                    display: false,\n                  },\n                },\n                elements: {\n                  line: {\n                    borderWidth: 2,\n                    tension: 0.4,\n                  },\n                  point: {\n                    radius: 0,\n                    hitRadius: 10,\n                    hoverRadius: 4,\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n      <CCol sm={6} xl={4} xxl={3}>\n        <CWidgetStatsA\n          color=\"danger\"\n          value={\n            <>\n              44K{' '}\n              <span className=\"fs-6 fw-normal\">\n                (-23.6% <CIcon icon={cilArrowBottom} />)\n              </span>\n            </>\n          }\n          title=\"Sessions\"\n          action={\n            <CDropdown alignment=\"end\">\n              <CDropdownToggle color=\"transparent\" caret={false} className=\"text-white p-0\">\n                <CIcon icon={cilOptions} />\n              </CDropdownToggle>\n              <CDropdownMenu>\n                <CDropdownItem>Action</CDropdownItem>\n                <CDropdownItem>Another action</CDropdownItem>\n                <CDropdownItem>Something else here...</CDropdownItem>\n                <CDropdownItem disabled>Disabled action</CDropdownItem>\n              </CDropdownMenu>\n            </CDropdown>\n          }\n          chart={\n            <CChartBar\n              className=\"mt-3 mx-3\"\n              style={{ height: '70px' }}\n              data={{\n                labels: [\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                  'May',\n                  'June',\n                  'July',\n                  'August',\n                  'September',\n                  'October',\n                  'November',\n                  'December',\n                  'January',\n                  'February',\n                  'March',\n                  'April',\n                ],\n                datasets: [\n                  {\n                    label: 'My First dataset',\n                    backgroundColor: 'rgba(255,255,255,.2)',\n                    borderColor: 'rgba(255,255,255,.55)',\n                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],\n                    barPercentage: 0.6,\n                  },\n                ],\n              }}\n              options={{\n                maintainAspectRatio: false,\n                plugins: {\n                  legend: {\n                    display: false,\n                  },\n                },\n                scales: {\n                  x: {\n                    grid: {\n                      display: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                  y: {\n                    border: {\n                      display: false,\n                    },\n                    grid: {\n                      display: false,\n                      drawBorder: false,\n                      drawTicks: false,\n                    },\n                    ticks: {\n                      display: false,\n                    },\n                  },\n                },\n              }}\n            />\n          }\n        />\n      </CCol>\n    </CRow>\n  )\n}\n\nWidgetsDropdown.propTypes = {\n  className: PropTypes.string,\n  withCharts: PropTypes.bool,\n}\n\nexport default WidgetsDropdown\n"],"names":["MainChart","chartRef","useRef","useEffect","document","documentElement","addEventListener","current","setTimeout","options","scales","x","grid","borderColor","getStyle","color","ticks","y","update","random","Math","round","_jsx","_Fragment","children","CChartLine","ref","style","height","marginTop","data","labels","datasets","label","backgroundColor","concat","pointHoverBackgroundColor","borderWidth","fill","borderDash","maintainAspectRatio","plugins","legend","display","drawOnChartArea","border","beginAtZero","max","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","dashboardDetails","async","axios","get","process","headers","Authorization","token","error","response","message","name","fetchDashboardData","DashboardService","Dashboard","setData","useState","navigate","useNavigate","AuthService","getAccessToken","DashboardController","console","log","localStorage","setItem","tokenStatus","status","replace","request","fetchData","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","user","new","registered","country","flag","cifUs","usage","period","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","_jsxs","WidgetsDropdown","className","CCard","CCardBody","CRow","CCol","sm","id","CButton","CIcon","cilCloudDownload","CButtonGroup","map","active","CCardFooter","xs","cols","gutter","lg","xl","item","index","items","classNames","length","CProgress","thin","WidgetsBrand","withCharts","CCardHeader","md","value1","value2","size","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","cilPeople","CTableBody","CTableDataCell","CAvatar","props","chartOptions","xxl","CWidgetStatsD","chart","CChart","type","values","cilCalendar","widgetChartRef1","widgetChartRef2","pointBackgroundColor","CWidgetStatsA","cilArrowBottom","action","CDropdown","alignment","CDropdownToggle","caret","cilOptions","CDropdownMenu","CDropdownItem","disabled","drawBorder","min","cilArrowTop","CChartBar","barPercentage","drawTicks"],"sourceRoot":""}